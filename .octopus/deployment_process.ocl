step "run-a-script" {
    name = "Run a Script"
    properties = {
        Octopus.Action.TargetRoles = "backend"
    }

    action {
        action_type = "Octopus.Script"
        properties = {
            Octopus.Action.RunOnServer = "false"
            Octopus.Action.Script.ScriptBody = <<-EOT
                #!/bin/bash
                
                set -e  # Exit immediately if a command exits with a non-zero status
                
                # Variables
                AWS_REGION="ap-south-1"
                ECR_REGISTRY="577638373950.dkr.ecr.ap-south-1.amazonaws.com"
                IMAGE_NAME="octopus"
                TAG="latest"
                
                echo "Authenticating Docker client with AWS ECR..."
                aws ecr get-login-password --region "$AWS_REGION" | docker login --username AWS --password-stdin "$ECR_REGISTRY"
                
                echo "Checking if Docker image needs to be built..."
                if [ -f Dockerfile ]; then
                    echo "Dockerfile found. Building the Docker image..."
                    docker build -t "$IMAGE_NAME" .
                else
                    echo "No Dockerfile found. Skipping build step."
                fi
                
                echo "Tagging the Docker image..."
                docker tag "$IMAGE_NAME:$TAG" "$ECR_REGISTRY/$IMAGE_NAME:$TAG"
                
                echo "Docker image is ready to be pushed. You can manually push it using:"
                echo "docker push $ECR_REGISTRY/$IMAGE_NAME:$TAG"
                
                echo "Pushing Docker image to ECR..."
                docker push "$ECR_REGISTRY/$IMAGE_NAME:$TAG"
                
                EOT
            Octopus.Action.Script.ScriptSource = "Inline"
            Octopus.Action.Script.Syntax = "Bash"
        }
        worker_pool_variable = ""
    }
}